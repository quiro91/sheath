buildscript {
  apply from: rootProject.file('dependencies.gradle')

  repositories {
    google()
    gradlePluginPortal()
    mavenCentral()
  }

  dependencies {
    classpath deps.android_gradle_plugin
    classpath deps.kotlin.dokka
    classpath deps.kotlin.gradle_plugin
    classpath deps.ktlint_plugin
    classpath deps.sheath_plugin
    classpath deps.maven_publishing_plugin
  }
}

println "Versions: " + [
    "Kotlin": ext.kotlinVersion,
    "Gradle": gradle.gradleVersion,
    "Kotlin use IR": ext.kotlinUseIR
]

allprojects {
  repositories {
    google()
    mavenCentral()
    // Required for publishing, Dokka needs org.jetbrains.kotlinx:kotlinx-html-jvm:0.7.2
    jcenter()
  }
}

subprojects {
  if (buildFile.exists()) {
    apply plugin: 'org.jlleitschuh.gradle.ktlint'

    ktlint {
      version = rootProject.ext.ktlintVersion
    }
  }

  tasks.withType(Test).configureEach {
    testLogging {
      events 'passed', 'failed', 'skipped', 'standardOut', 'standardError'
      exceptionFormat 'FULL'
      showCauses true
      showExceptions true
      showStackTraces true
      showStandardStreams true
    }
  }

  tasks.withType(JavaCompile).configureEach {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
  }

  //noinspection UnnecessaryQualifiedReference
  tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
      jvmTarget = JavaVersion.VERSION_1_8
      useIR = rootProject.ext.kotlinUseIR
      allWarningsAsErrors = rootProject.ext.allWarningsAsErrors
    }
  }

  // TODO: fix obscure dependency substitution error
  // This is the ideal solution, but doesn't quite work for some reason. The workaround below is
  // needed to make it work for now.
  configurations.all {
    resolutionStrategy.dependencySubstitution {
      substitute module("dev.quiro.sheath:compiler") with project(':compiler')
    }
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}
